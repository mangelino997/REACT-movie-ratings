{"version":3,"sources":["assets/error-404.png","no-img.png","assets/popcorn.png","assets/popcorn2.png","icons/arrowRight.tsx","components/Movie.tsx","utils/getRatingMovie.tsx","context/MoviesContext.js","components/SearchForm.tsx","icons/stars.tsx","context/UserContext.js","pages/Home.tsx","pages/login.tsx","pages/signup.tsx","pages/notFound.tsx","customsHooks/StarRating.tsx","utils/getMovieById.tsx","icons/check.tsx","icons/cross.tsx","components/notifications/Notification.tsx","components/Details.tsx","icons/edit.tsx","icons/trash.tsx","components/dashboards/AdminDashboard.tsx","components/dashboards/UserDashboard.tsx","pages/dashboard.tsx","components/NavBar.tsx","App.tsx","index.tsx"],"names":["module","exports","IconArrowRight","props","height","viewBox","width","fill","fillRule","stroke","strokeLinecap","strokeLinejoin","transform","cx","cy","r","d","Movie","movie","className","src","imageURL","alt","title","to","_id","getRatingDataMovie","movieId","ratingsList","reduce","accumulator","currentValue","idMovie","count","totalRating","parseFloat","stars","value","toFixed","MoviesContext","createContext","MoviesProvider","children","useState","setMovies","movieList","setMovieList","setRatingsList","movieListSearch","setMovieListSearch","loadingSearchMovies","setLoadingSearchMovies","addNewMovie","newMovie","a","axios","post","then","res","data","movieStored","ratingData","newList","catch","err","console","log","deleteMovie","delete","filter","addNewRatedMovie","newRatedMovie","rated","deleteMovieRated","movieRatedId","rating","getDataRating","map","useEffect","get","movies","ratings","searchMoviesList","search","inputMovie","trim","toLowerCase","newMovieList","m","includes","setTimeout","clearSearchMoviesList","updateMovie","put","index","splice","movieUpdated","status","Provider","SearchForm","setSearch","useContext","type","minLength","placeholder","aria-label","aria-describedby","onChange","e","target","handleChange","disabled","onClick","IconStars","UserContext","initial","role","credentials","authenticated","error","UserProvider","user","setUser","setAuthorizationHeader","token","localStorage","clear","setItem","defaults","headers","common","getItem","getUserData","userData","signin","history","push","response","message","logout","removeItem","signup","newUser","Home","useHistory","list","moviesListRanking","length","jwt_decode","exp","Date","now","sort","b","loading","style","color","key","scope","Login","useForm","register","handleSubmit","errors","watch","IconPopcorn","onSubmit","id","name","ref","required","email","password","Signup","IconPopcorn2","username","NotFound","NotFoundImage","StarRating","setRating","hover","setHover","Array","star","ratingValue","onMouseEnter","onMouseLeave","el","emailUser","newScore","alert","rankCurrentMovie","getMovieById","find","IconCheck","IconCross","Notification","initialToast","show","Details","toast","setToast","score","setScore","useParams","ratedMovie","director","year","plot","IconEdit","IconTrash","AdminDashboard","movieValues","setMovieValues","reset","buttonSubmit","image","formData","FormData","append","defaultValue","rows","event","URL","createObjectURL","files","deleteMovieId","UserDashboard","listRankedByUser","setListRankedByUser","titleMovie","deleteRankedMovie","Dashboard","NavBar","avatar","userLogo","exact","path","component","baseURL","App","setLoading","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b27aa228.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error-404.2df31fb3.png\";","module.exports = __webpack_public_path__ + \"static/media/no-img.5405d77c.png\";","module.exports = __webpack_public_path__ + \"static/media/popcorn.df41da6b.png\";","module.exports = __webpack_public_path__ + \"static/media/popcorn2.6d4b23b5.png\";","import * as React from \"react\"\r\n\r\n// Todas las funciones que se exporten deben comenzar con Capital (may)\r\nconst IconArrowRight = (props:any) => {\r\n  return (\r\n    <svg height={21} viewBox=\"0 0 21 21\" width={21} {...props}>\r\n      <g\r\n        fill=\"none\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"#2a2e3b\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        transform=\"translate(3 2)\"\r\n      >\r\n        <circle cx={8.5} cy={8.5} r={8} />\r\n        <path d=\"M9.5 11.499l3-3-3-3M12.5 8.5h-8\" />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default IconArrowRight","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport IconArrowRight from '../icons/arrowRight'\r\n\r\nconst Movie = ({movie} : any) => {\r\n    return (\r\n        <div className=\"col-6 col-md-3\">\r\n            <div className=\"card card-block flip-card\">\r\n                <div className=\"flip-card-inner\">\r\n                    <div className=\"flip-card-front\">\r\n                        <img src={movie.imageURL} className=\"imageURL\" alt=\"movie\" />\r\n                    </div>\r\n                    <div className=\"flip-card-back\">\r\n                        <p className=\"title-back-card\">{movie.title}</p>\r\n                        <Link to={`/details/${movie._id}`} className=\"bottom-right\">\r\n                            <span>details</span><IconArrowRight />\r\n                        </Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","export const getRatingDataMovie = (movieId: any, ratingsList:any) => {\r\n    let ratingData = {};\r\n    ratingData = ratingsList.reduce((accumulator:any, currentValue:any) => {\r\n        if(currentValue.idMovie === movieId){\r\n            accumulator.count ++;\r\n            accumulator.totalRating = parseFloat(accumulator.totalRating)+currentValue.stars;\r\n            accumulator.value = (accumulator.totalRating/ accumulator.count).toFixed(2);\r\n        }\r\n        return accumulator;\r\n    }, {\r\n        count: 0,\r\n        totalRating: 0,\r\n        value: 0\r\n    })\r\n    return ratingData\r\n}\r\n\r\nexport default getRatingDataMovie","import axios from 'axios';\r\nimport getRatingDataMovie from '../utils/getRatingMovie';\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst MoviesContext = createContext();\r\n\r\nconst MoviesProvider = ({ children }) => {\r\n\r\n    // consumer the movie context\r\n    const [movies, setMovies] = useState([]);\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [ratingsList, setRatingsList] = useState([]);\r\n    const [movieListSearch, setMovieListSearch] = useState(null);\r\n    const [loadingSearchMovies, setLoadingSearchMovies] = useState(false);\r\n\r\n    // handle search movies\r\n    const searchMoviesList = (search) => {\r\n        setLoadingSearchMovies(true);\r\n        const inputMovie = search.trim().toLowerCase();\r\n        const newMovieList = movieList.filter(m => {\r\n            const mTitle = m.title.toLowerCase().trim();\r\n            return mTitle.includes(inputMovie.toLowerCase().trim());\r\n        });\r\n        setTimeout(() => {\r\n            setLoadingSearchMovies(false);\r\n            setMovieListSearch(newMovieList);\r\n        }, 1800)\r\n    }\r\n\r\n    // handle reset movieList\r\n    const clearSearchMoviesList = () => {\r\n        setLoadingSearchMovies(true);\r\n        setTimeout(() => {\r\n            setLoadingSearchMovies(false);\r\n            setMovieListSearch(null);\r\n        }, 1800)\r\n    }\r\n\r\n    //add new movie\r\n    const addNewMovie = async (newMovie) => {\r\n        await axios.post('/movies', newMovie)\r\n            .then((res) => {\r\n                res.data.movieStored.ratingData = {\r\n                    count: 0,\r\n                    totalRating: 0,\r\n                    value: 0\r\n                }\r\n                const newList = [\r\n                    res.data.movieStored,\r\n                    ...movieList\r\n                ]\r\n                setMovieList(newList)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    //update movie\r\n    const updateMovie = (movie, movieId) => {\r\n        setLoadingSearchMovies(true);\r\n        axios.put(`/movies/${movieId}`, movie)\r\n            .then((res) => {\r\n                const newList = movieList;\r\n                newList.map((m, index) => {\r\n                    if (m._id === movie._id)\r\n                        movieList.splice(index, 1, res.data.movieUpdated)\r\n                })\r\n                setMovieList(newList);\r\n                getDataRating();\r\n                setTimeout(() => {\r\n                    setLoadingSearchMovies(false);\r\n                }, 1800)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                return err.status;\r\n            })\r\n    }\r\n\r\n    // delete movie\r\n    const deleteMovie = async (movieId) => {\r\n        await axios.delete(`/movies/${movieId}`)\r\n            .then((res) => {\r\n                const newList = movieList.filter(movie => movie._id !== movieId)\r\n                setMovieList(newList)\r\n                return true;\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    /*          METHODS FOR RATED MOVIES         */\r\n\r\n    //add new rated movie \r\n    const addNewRatedMovie = async (newRatedMovie) => {\r\n        await axios.post('/ratings', newRatedMovie)\r\n            .then((res) => {\r\n                const newList = [\r\n                    res.data.rated,\r\n                    ...ratingsList\r\n                ]\r\n                setRatingsList(newList)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    // delete movie rated\r\n    const deleteMovieRated = async (movieRatedId) => {\r\n        await axios.delete(`/ratings/${movieRatedId}`)\r\n            .then((res) => {\r\n                const newList = ratingsList.filter(rating => rating._id !== movieRatedId)\r\n                setRatingsList(newList)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    // generate data rating for each movie\r\n    const getDataRating = () => {\r\n        movieList.map((movie) => {\r\n            movie.ratingData = getRatingDataMovie(movie._id, ratingsList);\r\n        })\r\n        setMovieList(movieList)\r\n        setMovies(movieList);\r\n    }\r\n\r\n\r\n    // get and format list movies\r\n    const getAllAndFormatMovies = () => {\r\n        axios.get('movies')\r\n            .then((res) => {\r\n                setMovieList(res.data ? res.data.movies : [])\r\n                axios.get('ratings')\r\n                    .then((res) => {\r\n                        // get all register of ratings \r\n                        setRatingsList(res.data ? res.data.ratings : [])\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err)\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        getAllAndFormatMovies()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getDataRating()\r\n    }, [ratingsList])\r\n\r\n    const data = {\r\n        movieList,\r\n        ratingsList,\r\n        movieListSearch,\r\n        loadingSearchMovies,\r\n        searchMoviesList,\r\n        clearSearchMoviesList,\r\n        addNewMovie,\r\n        updateMovie,\r\n        deleteMovie,\r\n        deleteMovieRated,\r\n        addNewRatedMovie\r\n    }\r\n\r\n    return (\r\n        <MoviesContext.Provider value={data}>\r\n            {children}\r\n        </MoviesContext.Provider>\r\n    )\r\n}\r\nexport { MoviesProvider }\r\nexport default MoviesContext;","import React, { useContext, useState } from 'react'\r\nimport MoviesContext from '../context/MoviesContext';\r\n\r\nconst SearchForm = () => {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const { searchMoviesList, clearSearchMoviesList } = useContext(MoviesContext);\r\n\r\n    const handleChange = (e: any) => {\r\n        setSearch( e.target.value)\r\n    }\r\n\r\n    // handle search movies\r\n    const handleSearch = () => {\r\n        searchMoviesList(search);\r\n    }\r\n\r\n    // handle return all movieList\r\n    const handleClearSearchMovies = () => {\r\n        setSearch('');\r\n        clearSearchMoviesList();\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"input-group input-group-sm mb-3 \">\r\n                <input type=\"text\" className=\"form-control\"\r\n                    minLength={1}\r\n                    value={search}\r\n                    placeholder=\"Example: John Wick\"\r\n                    aria-label=\"Recipient's username\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    onChange={(e) => handleChange(e)} />\r\n                <div className=\"input-group-append\">\r\n                    <button\r\n                        disabled={!search}\r\n                        onClick={handleSearch}\r\n                        className=\"btn btn-outline-primary\" type=\"button\">\r\n                        Search\r\n                    </button>\r\n                    <button\r\n                        disabled={!search}\r\n                        className=\"btn btn-outline-secondary\"\r\n                        onClick={handleClearSearchMovies}\r\n                        type=\"button\">\r\n                        Reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import * as React from \"react\"\r\n\r\nfunction IconStars(props:any) {\r\n  return (\r\n    <svg height={21} viewBox=\"0 0 21 21\" width={21} {...props}>\r\n      <path\r\n        d=\"M10.5 14.5l-5 3 2-5.131-4-3.869h5l2-5 2 5h5l-4 4 2 5z\"\r\n        fill=\"current\"\r\n        stroke=\"current\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default IconStars\r\n","'use strict'\r\nimport axios from 'axios';\r\nimport React, { createContext, useState } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nconst initial = {\r\n    role: \"\",\r\n    credentials: {},\r\n    authenticated: false,\r\n    error: ''\r\n}\r\nconst UserProvider = ({ children }) => {\r\n\r\n    // handle state\r\n    const [user, setUser] = useState(initial);\r\n\r\n    // handle login user\r\n    const signin = (userData, history) => {\r\n        axios.post('/signin', userData)\r\n            .then(res => {\r\n                setAuthorizationHeader(res.data.token)\r\n                getUserData()\r\n                history.push('/'); // go to homepage\r\n            })\r\n            .catch(error => {\r\n                setUser({\r\n                    ...user,\r\n                    error: error.response.data.message\r\n                })\r\n            });\r\n    }\r\n\r\n    // handle logout user\r\n    const logout = (history) => {\r\n        localStorage.removeItem(\"Token\");\r\n        delete axios.defaults.headers.common['Authorization'];\r\n        setUser(initial);\r\n        history.push('/login');\r\n    }\r\n\r\n    // handle signup\r\n    const signup = (newUser, history) => {\r\n        axios.post('/signup', newUser)\r\n            .then(res => {\r\n                setAuthorizationHeader(res.data.token)\r\n                getUserData()\r\n                history.push('/');\r\n            })\r\n            .catch(error => {\r\n                setUser({\r\n                    ...user,\r\n                    error: error.response.data.message\r\n                })\r\n            })\r\n    }\r\n\r\n    // set token header (codigo que se repite en login y signup)\r\n    const setAuthorizationHeader = (token) => {\r\n        localStorage.clear();\r\n        localStorage.setItem('Token', `Bearer ${token}`);\r\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem('Token');\r\n    };\r\n\r\n    // obtiene los datos del usuario logueado\r\n    const getUserData = () => {\r\n        axios.get('/user')\r\n            .then(res => {\r\n                const data = {\r\n                    credentials: res.data.userData.credentials,\r\n                    authenticated: true,\r\n                    error: ''\r\n                }\r\n                // get ratings where emailUser = user.credentials.email ???\r\n                setUser(data)\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    // handle data user\r\n    const data = { user, signin, logout, signup, getUserData }\r\n\r\n    return (\r\n        <UserContext.Provider value={data}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\nexport { UserProvider }\r\nexport default UserContext;","import React, { useEffect, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Movie from '../components/Movie';\r\nimport SearchForm from '../components/SearchForm';\r\nimport MoviesContext from '../context/MoviesContext';\r\nimport IconArrowRight from '../icons/arrowRight';\r\nimport axios from 'axios';\r\nimport IconStars from '../icons/stars';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport UserContext from '../context/UserContext';\r\n\r\nconst Home = () => {\r\n    const { logout, getUserData } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    // consumer the movie context\r\n    const {\r\n        movieList,\r\n        movieListSearch,\r\n        clearSearchMoviesList,\r\n        loadingSearchMovies } = useContext(MoviesContext);\r\n\r\n    // define list\r\n    const list = movieListSearch ? movieListSearch : movieList;\r\n\r\n    // get top 20 of the ranking\r\n    const moviesListRanking = movieList.length > 20 ?\r\n        movieList.splice(20, (movieList.length - 20)) : movieList;\r\n\r\n    useEffect(() => {\r\n        // clear before movie list search's\r\n        clearSearchMoviesList();\r\n        // get token\r\n        const token = localStorage.getItem(\"Token\");\r\n        if (token) {\r\n            const decodeToken: any = jwt_decode(token);\r\n            if (decodeToken.exp * 1000 < Date.now()) // verificamos si expiro el token\r\n            {\r\n                logout(history);\r\n            } else {\r\n                axios.defaults.headers.common['Authorization'] = token;\r\n                getUserData()\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // order list for rating desc\r\n        movieList.sort((a: any, b: any) => (a.ratingData?.value < b.ratingData?.value) ? 1 : -1)\r\n    }, [movieList])\r\n    const loading = loadingSearchMovies ?\r\n        (\r\n            <div className=\"row justify-content-center py-5\">\r\n                <div className=\"sk-folding-cube \">\r\n                    <div className=\"sk-cube1 sk-cube\"></div>\r\n                    <div className=\"sk-cube2 sk-cube\"></div>\r\n                    <div className=\"sk-cube4 sk-cube\"></div>\r\n                    <div className=\"sk-cube3 sk-cube\"></div>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <div>\r\n                {movieListSearch ? (movieListSearch.length === 0 &&\r\n                    <small style={{ color: '#FF4E56' }}>Not found</small>)\r\n                    : null}\r\n                <div className=\"row flex-nowrap overflow-auto\">\r\n                    {\r\n                        list.map((m: any) => (\r\n                            <Movie key={m._id} movie={m} />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <p className=\"title-movies my-3\">Top Ranking</p>\r\n            </div>\r\n        )\r\n    return (\r\n        <>\r\n            <p className=\"title-movies my-5\">Movies</p>\r\n            <div className=\"row my-1\">\r\n                <div className=\"col-10 col-md-5 \">\r\n                    <SearchForm />\r\n                </div>\r\n            </div>\r\n            {loading}\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5 table-responsive-sm\">\r\n                    <table className=\"table table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Rating</th>\r\n                                <th scope=\"col\">Title</th>\r\n                                <th scope=\"col\">-</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                moviesListRanking.map((m: any, index: number) => (\r\n                                    <tr key={m._id} >\r\n                                        <th scope=\"row\">{index + 1}</th>\r\n                                        <td >\r\n                                            {m.ratingData?.value}\r\n                                            <IconStars key={index}\r\n                                                className=\"rotate-vert-center\"\r\n                                                width={18} height={18}\r\n                                                stroke=\"#FF8222\" fill=\"#FF8222\" />\r\n                                        </td>\r\n                                        <td>{m.title}</td>\r\n                                        <td>\r\n                                            <Link to={`/details/${m._id}`} >\r\n                                                <span>details</span><IconArrowRight />\r\n                                            </Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useContext } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport IconPopcorn from '../assets/popcorn.png'\r\nimport UserContext from '../context/UserContext';\r\n\r\ntype Inputs = {\r\n    email: string,\r\n    password: string,\r\n};\r\nconst Login = () => {\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm<Inputs>();\r\n    const { signin, user } = useContext(UserContext)\r\n    const history = useHistory();\r\n\r\n    const onSubmit = (userData: any) => {\r\n        signin(userData, history)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center my-5\">\r\n                <div className=\"col-md-6 card-login\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"py-2 text-center\">\r\n                            <img className=\"mb-4\" src={IconPopcorn} alt=\"\" width=\"76\" height=\"76\" />\r\n                            <h1 className=\"title-login mb-3 font-weight-normal\">Welcome</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row justify-content-center my-4\">\r\n                        <div className=\"col\">\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"\">\r\n                                    <input\r\n                                        id=\"validationServer03\"\r\n                                        name=\"email\" type=\"email\"\r\n                                        placeholder=\"user@gmail.com\"\r\n                                        className=\"form-control input-login\"\r\n                                        ref={register({ required: true })} />\r\n                                    {errors.email &&\r\n                                        (\r\n                                            <p\r\n                                                id=\"validationServer03Feedback\"\r\n                                                className=\"invalid-feedback\">\r\n                                                This field is required\r\n                                            </p>\r\n                                        )}\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"\">\r\n                                    <input\r\n                                        name=\"password\" type=\"password\"\r\n                                        placeholder=\"password\"\r\n                                        className=\"form-control input-login\"\r\n                                        ref={register({ required: true })} />\r\n                                    {errors.password &&\r\n                                        (\r\n                                            <p\r\n                                                id=\"validationServer03Feedback\"\r\n                                                className=\"invalid-feedback\">\r\n                                                This field is required\r\n                                            </p>\r\n                                        )}\r\n                                </div><br />\r\n                                {user.error &&\r\n                                    (<p className=\"invalid-feedback\">{user.error}</p>)\r\n                                }\r\n                                <div className=\"row my-1\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <button\r\n                                            className=\"btn btn-sm btn-login btn-primary\"\r\n                                            type=\"submit\" >Login\r\n                                    </button>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <span>Don't have an account? </span>\r\n                                        <Link to=\"/signup\" className=\"signin-login\"> Sign in here</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useContext } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport IconPopcorn2 from '../assets/popcorn2.png'\r\nimport UserContext from '../context/UserContext';\r\n\r\ntype Inputs = {\r\n    email: string,\r\n    username: string,\r\n    password: string,\r\n};\r\nconst Signup = () => {\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm<Inputs>();\r\n    const {signup, user} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const onSubmit = (newUser: any) =>{\r\n        signup(newUser, history)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center my-5\">\r\n                <div className=\"col-md-6 card-login\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"py-2 text-center\">\r\n                            <img className=\"mb-4\" src={IconPopcorn2} alt=\"\" width=\"76\" height=\"76\" />\r\n\r\n                            <h1 className=\"title-login mb-3 font-weight-normal\">Sign Up</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center my-4\">\r\n                        <div className=\"col\">\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"\">\r\n                                    <input\r\n                                        name=\"username\" type=\"text\"\r\n                                        placeholder=\"username\"\r\n                                        className=\"form-control input-login\"\r\n                                        ref={register({ required: true })} />\r\n                                    {errors.username &&\r\n                                        <span\r\n                                            className=\"invalid-feedback\">\r\n                                            This field is required\r\n                                        </span>\r\n                                    }\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"\">\r\n                                    <input\r\n                                        name=\"email\" type=\"email\"\r\n                                        placeholder=\"email\"\r\n                                        className=\"form-control input-login\"\r\n                                        ref={register({ required: true })} />\r\n                                    {errors.email &&\r\n                                        <span\r\n                                            className=\"invalid-feedback\">\r\n                                            This field is required\r\n                                        </span>\r\n                                    }\r\n                                </div>\r\n                                <br />\r\n                                <div className=\"\">\r\n                                    <input\r\n                                        name=\"password\" type=\"password\"\r\n                                        placeholder=\"password\"\r\n                                        className=\"form-control input-login\"\r\n                                        ref={register({ required: true })} />\r\n                                    {errors.password &&\r\n                                        <span\r\n                                            className=\"invalid-feedback\">\r\n                                            This field is required\r\n                                        </span>\r\n                                    }\r\n                                </div><br />\r\n                                {user.error &&\r\n                                    (<p className=\"invalid-feedback\">{user.error}</p>)\r\n                                }\r\n                                <div className=\"row my-1\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <button\r\n                                            className=\"btn btn-sm btn-login btn-primary\"\r\n                                            type=\"submit\" >Signup\r\n                                    </button>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <span>Have an account? </span>\r\n                                        <Link to=\"/login\" className=\"signin-login\"> Login here</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react'\r\nimport NotFoundImage from '../assets/error-404.png';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center \">\r\n                    <div className=\"col text-center\">\r\n                        <img src={NotFoundImage} height={300} width={300}></img>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport IconStars from '../icons/stars'\r\nimport './starRating.css'\r\nimport UserContext from '../context/UserContext';\r\nconst StarRating = (props: any) => {\r\n\r\n    const [rating, setRating] = useState(0);\r\n    const [hover, setHover] = useState(0);\r\n\r\n    // consumer the user context\r\n    const { user } = useContext(UserContext);\r\n    // handle the rank current movie\r\n    const rankCurrentMovie = () => {\r\n        if (!user.credentials.email) {\r\n            alert(\"You must Sign In\")\r\n            return\r\n        }\r\n        const el = {\r\n            emailUser: user.credentials.email,\r\n            idMovie: props.idMovie,\r\n            stars: rating\r\n        }\r\n        props.newScore(rating, el)\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, [rating])\r\n    return (\r\n        <div>\r\n            {[...Array(10)].map((star: any, index: any) => {\r\n                const ratingValue = index + 1;\r\n                return (\r\n                    <label key={index}>\r\n                        <input\r\n                            type=\"radio\" name=\"rating\" value={ratingValue}\r\n                            onClick={() => setRating(ratingValue)}\r\n                        />\r\n                        <IconStars\r\n                            className=\"star\"\r\n                            width={26} height={26}\r\n                            stroke={ratingValue <= (rating || hover) ? \"#FF8222\" : null}\r\n                            fill={ratingValue <= (rating || hover) ? \"#FF8222\" : null}\r\n                            onMouseEnter={() => setHover(ratingValue)}\r\n                            onMouseLeave={() => setHover(0)}\r\n                        />\r\n                    </label>\r\n                )\r\n            })}\r\n            <div className=\"text-center\">\r\n                <h4>{rating} stars</h4>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => rankCurrentMovie()}\r\n                    disabled={rating === 0}\r\n                    className=\"btn btn-sm btn-success btn-login btn-success-shadow\">\r\n                    Rank\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-sm btn-secondary btn-login ml-2 btn-second-shadow\"\r\n                    onClick={() => setRating(0)}>\r\n                    Reset\r\n                </button>\r\n                {/* <button\r\n                    className=\"btn-reset-stars\"\r\n                    onClick={() => setRating(0)}>\r\n                    <IconReset />\r\n                </button> */}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StarRating\r\n","export const getMovieById = (movieId: any, movieList:any) => {\r\n    return movieList.find((movie: any) => movie._id === movieId);\r\n}\r\n\r\nexport default getMovieById\r\n","import * as React from \"react\"\r\n\r\nfunction IconCheck(props:any) {\r\n  return (\r\n    <svg height={40} viewBox=\"0 0 21 21\" width={40} {...props}>\r\n      <g\r\n        fill=\"current\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"current\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        transform=\"translate(2 2)\"\r\n      >\r\n        <circle cx={8.5} cy={8.5} r={8} />\r\n        <path d=\"M5.5 9.5l2 2 5-5\" />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default IconCheck","import * as React from \"react\"\r\n\r\nfunction IconCross(props:any) {\r\n  return (\r\n    <svg height={40} viewBox=\"0 0 21 21\" width={40} {...props}>\r\n      <g\r\n        fill=\"current\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"current\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        transform=\"translate(2 2)\"\r\n      >\r\n        <circle cx={8.5} cy={8.5} r={8} />\r\n        <path d=\"M5.5 5.5l6 6M11.5 5.5l-6 6\" />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default IconCross","import React from 'react'\r\nimport IconCheck from '../../icons/check'\r\nimport IconCross from '../../icons/cross'\r\n\r\nconst Notification = (props: { type: any, message: any }) => {\r\n    return (\r\n        <div id=\"toast\"\r\n            className={props.type === \"success\" ? \"show success\" : \"show error\"}>\r\n            <div id=\"img\"\r\n                className={props.type === \"success\" ? \"success\" : \"error\"}>\r\n                {props.type === \"success\" ?\r\n                    <IconCheck stroke=\"#fff\" fill=\"#28a745\" /> :\r\n                    <IconCross stroke=\"#fff\" fill=\"#DD4535\" />\r\n                }\r\n            </div>\r\n            <div id=\"desc\">{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { useParams, useHistory } from 'react-router';\r\nimport MoviesContext from '../context/MoviesContext';\r\nimport StarRating from '../customsHooks/StarRating';\r\nimport IconStars from '../icons/stars';\r\nimport getMovieById from '../utils/getMovieById';\r\nimport Notification from './notifications/Notification';\r\n\r\nconst initialToast = {\r\n    show: false,\r\n    type: \"\",\r\n    message: \"\"\r\n}\r\nconst Details = () => {\r\n    // consumer the movie context\r\n    const { movieList, addNewRatedMovie } = useContext(MoviesContext);\r\n    // define current movie\r\n    let movie:any;\r\n    // handle redirect \r\n    const history = useHistory();\r\n    // show toast\r\n    const [toast, setToast] = useState(initialToast);\r\n    // set score (stars)\r\n    const [score, setScore] = useState(0);\r\n    // get url param\r\n    const { movieId }: any = useParams();\r\n    // conditional\r\n    movieList.length>0 && (movie = getMovieById(movieId, movieList));\r\n    \r\n    // calculate the new classification\r\n    const newScore = (stars: number, el: any) => {\r\n        try {\r\n            addNewRatedMovie(el)\r\n            movie.ratingData.count++;\r\n            movie.ratingData.totalRating += stars;\r\n            movie.value = (movie.ratingData.totalRating / movie.ratingData.count);\r\n            setScore(movie.value.toFixed(2));\r\n            const t = {\r\n                show: true,\r\n                type: \"success\",\r\n                message: \"Movie rated successful\"\r\n            };\r\n            setToast(t)\r\n            setTimeout(() => {\r\n                setToast(initialToast)\r\n            }, 5000)\r\n        } catch (error) {\r\n            const t = {\r\n                show: true,\r\n                type: \"error\",\r\n                message: \"Movie not rated\"\r\n            };\r\n            setToast(t)\r\n            setTimeout(() => {\r\n                setToast(initialToast)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (movieList.length === 0) {\r\n            history.push('/');\r\n            return;\r\n        }\r\n        // if the movie has not been rated, the value = 0\r\n        let ratedMovie = movie.ratingData? movie.ratingData.value: 0;\r\n        setScore(ratedMovie);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center py-2\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <img className=\"card swing-in-top-fwd card-img-bottom\"\r\n                        src={movie?.imageURL}\r\n                        alt=\"Card image cap\" />\r\n                </div>\r\n                <div className=\"col-12 col-md-4\">\r\n                    <div className=\"text-center\">\r\n                        <h1 className=\"card-title\">{movie?.title}</h1>\r\n                        <h6>{movie?.director}</h6>\r\n                    </div>\r\n                    <div className=\"text-center py-3\">\r\n                        <StarRating idMovie={movie?._id} newScore={newScore} />\r\n                    </div>\r\n                    <div className=\"row justify-content-center text-center\">\r\n                        <div className=\"col\">\r\n                            <h5>{movie?.year}</h5>\r\n                            <small>Year</small>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <h5>{movie?.rated}</h5>\r\n                            <small>Rated</small>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <h5>\r\n                                {score}\r\n                                <IconStars\r\n                                    className=\"star\"\r\n                                    width={26} height={26}\r\n                                    stroke=\"#FF8222\" fill=\"#FF8222\"\r\n                                />\r\n                            </h5>\r\n                            <small>Rating</small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-center py-3\">\r\n                        <p className=\"card-text\">{movie?.plot}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {toast.show && <Notification type={toast.type} message={toast.message} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import * as React from \"react\"\r\n\r\nfunction IconEdit(props: any) {\r\n  return (\r\n    <svg height={21} viewBox=\"0 0 21 21\" width={21} {...props}>\r\n      <g\r\n        fill=\"current\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"current\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M17 4a2.121 2.121 0 010 3l-9.5 9.5-4 1 1-3.944 9.504-9.552A2.116 2.116 0 0117 4zM15.5 6.5l1 1\" />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default IconEdit","import * as React from \"react\"\r\n\r\nfunction IconTrash(props: any) {\r\n  return (\r\n    <svg height={21} viewBox=\"0 0 21 21\" width={21} {...props}>\r\n      <g\r\n        fill=\"current\"\r\n        fillRule=\"evenodd\"\r\n        stroke=\"current\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M5.5 4.5h10v12a2 2 0 01-2 2h-6a2 2 0 01-2-2zm5-2a2 2 0 012 2h-4a2 2 0 012-2zM3.5 4.5h14M8.5 7.5v8M12.5 7.5v8\" />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default IconTrash","import React, { useContext, useState } from 'react'\r\nimport MoviesContext from '../../context/MoviesContext'\r\nimport UserContext from '../../context/UserContext'\r\nimport IconEdit from '../../icons/edit'\r\nimport IconStars from '../../icons/stars'\r\nimport IconTrash from '../../icons/trash'\r\nimport SearchForm from '../SearchForm'\r\nimport { useForm } from 'react-hook-form';\r\nimport Notification from '../notifications/Notification';\r\nimport { useHistory } from 'react-router'\r\n\r\ntype Inputs = {\r\n    title: string,\r\n    year: number,\r\n    rated: string,\r\n    director: string,\r\n    plot: string,\r\n    image: any,\r\n    imageURL: any,\r\n    _id: any\r\n};\r\n\r\nconst initialToast = {\r\n    show: false,\r\n    type: \"\",\r\n    message: \"\"\r\n}\r\nconst AdminDashboard = () => {\r\n\r\n    const history = useHistory();\r\n    // show toast\r\n    const [toast, setToast] = useState(initialToast);\r\n    // form values\r\n    const [movieValues, setMovieValues] = useState<any>(null);\r\n    // consumer the movie context\r\n    const { logout } = useContext(UserContext);\r\n    const { reset, register, handleSubmit, errors } = useForm<Inputs>();\r\n\r\n    // consumer the movie context\r\n    const {\r\n        movieList,\r\n        movieListSearch,\r\n        loadingSearchMovies,\r\n        addNewMovie,\r\n        updateMovie,\r\n        deleteMovie\r\n    } = useContext(MoviesContext);\r\n\r\n    // handle submit \r\n    const onSubmit = (data: any) => {\r\n        const image = data.image ? data.image[0] : null\r\n        const formData = new FormData();\r\n        formData.append(\"title\", data.title)\r\n        formData.append(\"year\", data.year)\r\n        formData.append(\"rated\", data.rated)\r\n        formData.append(\"director\", data.director)\r\n        formData.append(\"plot\", data.plot)\r\n        formData.append(\"image\", image)\r\n        // formData.append(\"imageURL\", movieValues.imageURL)\r\n        // formData.append(\"_id\", movieValues._id)\r\n\r\n        // update movie (else --> add new movie)\r\n        if (movieValues?._id) {\r\n            try {\r\n                data.image = null;\r\n                data.imageURL = movieValues.imageURL\r\n                data._id = movieValues._id\r\n                updateMovie(data, movieValues._id)\r\n\r\n                const t = {\r\n                    show: true,\r\n                    type: \"success\",\r\n                    message: \"Movie update successful\"\r\n                };\r\n                setToast(t)\r\n                setMovieValues(null);\r\n                reset();\r\n                setTimeout(() => {\r\n                    setToast(initialToast)\r\n                }, 5000)\r\n            } catch (error) {\r\n                const t = {\r\n                    show: true,\r\n                    type: \"error\",\r\n                    message: \"Movie not update\"\r\n                };\r\n                setToast(t);\r\n                setTimeout(() => {\r\n                    setToast(initialToast)\r\n                }, 5000)\r\n            }\r\n        } else {\r\n            try {\r\n                addNewMovie(formData);\r\n                const t = {\r\n                    show: true,\r\n                    type: \"success\",\r\n                    message: \"Movie added successful\"\r\n                };\r\n                setToast(t)\r\n                reset();\r\n                setTimeout(() => {\r\n                    setToast(initialToast)\r\n                }, 5000)\r\n            } catch (error) {\r\n                const t = {\r\n                    show: true,\r\n                    type: \"error\",\r\n                    message: \"Movie not added\"\r\n                };\r\n                setToast(t);\r\n                setTimeout(() => {\r\n                    setToast(initialToast)\r\n                }, 5000)\r\n            }\r\n        }\r\n    };\r\n\r\n    // handle set default values for to edit\r\n    const editMovie = (movie: any) => {\r\n        setMovieValues(movie);\r\n    }\r\n\r\n    // handle delete movie\r\n    // const updateMovieSelected = (movie: any) => {\r\n    //     try {\r\n    //         updateMovie(movie);\r\n    //         const t = {\r\n    //             show: true,\r\n    //             type: \"success\",\r\n    //             message: \"Movie deleted successful\"\r\n    //         };\r\n    //         setToast(t)\r\n    //         setTimeout(() => {\r\n    //             setToast(initialToast);\r\n    //         }, 5000)\r\n    //     } catch (error) {\r\n    //         const t = {\r\n    //             show: true,\r\n    //             type: \"error\",\r\n    //             message: \"Movie not deleted\"\r\n    //         };\r\n    //         setToast(t);\r\n    //         setTimeout(() => {\r\n    //             setToast(initialToast)\r\n    //         }, 5000)\r\n    //     }\r\n    // }\r\n    // handle delete movie\r\n    const deleteMovieId = (movieId: any) => {\r\n        try {\r\n            deleteMovie(movieId);\r\n            const t = {\r\n                show: true,\r\n                type: \"success\",\r\n                message: \"Movie deleted successful\"\r\n            };\r\n            setMovieValues(null);\r\n            reset();\r\n            setToast(t)\r\n            setTimeout(() => {\r\n                setToast(initialToast);\r\n            }, 5000)\r\n        } catch (error) {\r\n            const t = {\r\n                show: true,\r\n                type: \"error\",\r\n                message: \"Movie not deleted\"\r\n            };\r\n            setToast(t);\r\n            setTimeout(() => {\r\n                setToast(initialToast)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    // handle change image\r\n    const handleChangeImage = (event: any) => {\r\n        setMovieValues({\r\n            ...movieValues,\r\n            imageURL: URL.createObjectURL(event.target.files[0])\r\n        })\r\n    }\r\n    // define list\r\n    const list = movieListSearch ? movieListSearch : movieList;\r\n\r\n    // button submit\r\n    let buttonSubmit = movieValues?.title ?\r\n        \"Update movie\" : \"Add movie\";\r\n\r\n    // list filter\r\n    const loading = loadingSearchMovies ?\r\n        (\r\n            <div className=\"row justify-content-center py-5\">\r\n                <div className=\"sk-folding-cube \">\r\n                    <div className=\"sk-cube1 sk-cube\"></div>\r\n                    <div className=\"sk-cube2 sk-cube\"></div>\r\n                    <div className=\"sk-cube4 sk-cube\"></div>\r\n                    <div className=\"sk-cube3 sk-cube\"></div>\r\n                </div>\r\n            </div>\r\n        ) : null;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                <h4>ADMIN</h4>\r\n                <button\r\n                    className=\"mb-md-0 btn btn-sm btn-secondary\"\r\n                    onClick={() => logout(history)}\r\n                >\r\n                    Logout\r\n                    </button>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-4\">\r\n                    <img />\r\n                </div>\r\n            </div>\r\n            <div className=\"row my-1\">\r\n                <div className=\"col-md-6 card-login py-3\">\r\n                    <div className=\"row justify-content-center my-1\">\r\n                        <div className=\"col\">\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"title\"\r\n                                            name=\"title\"\r\n                                            defaultValue={movieValues?.title}\r\n                                            ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.title ?\r\n                                            <div className=\"invalid-feedback\">\r\n                                                This field is required\r\n                                        </div> : <br />\r\n                                        }\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"year\"\r\n                                            name=\"year\"\r\n                                            defaultValue={movieValues?.year}\r\n                                            ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.year &&\r\n                                            <div className=\"invalid-feedback\">\r\n                                                This field is required\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"rated\"\r\n                                            name=\"rated\"\r\n                                            defaultValue={movieValues?.rated}\r\n                                            ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.rated &&\r\n                                            <div className=\"invalid-feedback\">\r\n                                                This field is required\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control form-control-sm\"\r\n                                            placeholder=\"director\"\r\n                                            name=\"director\"\r\n                                            defaultValue={movieValues?.director}\r\n                                            ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.director &&\r\n                                            <div className=\"invalid-feedback\">\r\n                                                This field is required\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                </div><br />\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col\">\r\n                                        <textarea\r\n                                            rows={3}\r\n                                            placeholder=\"plot\"\r\n                                            className=\"form-control\"\r\n                                            name=\"plot\"\r\n                                            defaultValue={movieValues?.plot}\r\n                                            ref={register({ required: true })}\r\n                                        />\r\n                                        {errors.plot &&\r\n                                            <div className=\"invalid-feedback\">\r\n                                                This field is required\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                </div><br />\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col\">\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            id=\"validatedCustomFile\"\r\n                                            name=\"image\"\r\n                                            onChange={(e) => handleChangeImage(e)}\r\n                                            disabled={movieValues?._id}\r\n                                            ref={register}\r\n\r\n                                        />\r\n                                        {errors.image &&\r\n                                            <div className=\"invalid-feedback\">\r\n                                                This field is required\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                </div><br />\r\n                                <button\r\n                                    className=\"btn btn-sm btn-success\"\r\n                                    type=\"submit\">\r\n                                    {buttonSubmit}\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-5 card-login py-3\">\r\n                    <div className=\"text-center my-auto\">\r\n                        <img height=\"auto\" width={200}\r\n                            src={movieValues?.imageURL}\r\n                            alt=\"movie image\" />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"row my-1\">\r\n                <div className=\"col-10 col-md-5 \">\r\n                    <SearchForm />\r\n                    {loading}\r\n                </div>\r\n            </div>\r\n\r\n            {!loadingSearchMovies &&\r\n                (\r\n                    <div className=\"row\">\r\n                        <div className=\"table-responsive-sm\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th scope=\"col\">Rating</th>\r\n                                        <th scope=\"col\">Title</th>\r\n                                        <th scope=\"col\">-</th>\r\n                                        <th scope=\"col\">-</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        list.map((m: any, index: number) => (\r\n                                            <tr key={index} >\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>\r\n                                                    {m.ratingData?.value}\r\n                                                    <IconStars key={index}\r\n                                                        className=\"rotate-vert-center\"\r\n                                                        width={18} height={18}\r\n                                                        stroke=\"#FF8222\" fill=\"#FF8222\" />\r\n                                                </td>\r\n                                                <td>{m.title}</td>\r\n                                                <td>\r\n                                                    <button\r\n                                                        onClick={() => editMovie(m)}\r\n                                                        className=\"btn btn-sm btn-primary btn-primary-shadow\">\r\n                                                        <IconEdit\r\n                                                            stroke=\"#fff\"\r\n                                                            fill=\"#fff\"\r\n                                                        />\r\n                                                    </button>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <button\r\n                                                        onClick={() => deleteMovieId(m._id)}\r\n                                                        className=\"btn btn-sm btn-danger btn-danger-shadow\">\r\n                                                        <IconTrash\r\n                                                            stroke=\"#fff\"\r\n                                                            fill=\"#fff\"\r\n                                                        />\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            {toast.show && <Notification type={toast.type} message={toast.message} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport MoviesContext from '../../context/MoviesContext';\r\nimport UserContext from '../../context/UserContext';\r\nimport IconStars from '../../icons/stars';\r\nimport IconTrash from '../../icons/trash';\r\nimport Notification from '../notifications/Notification';\r\nimport getMovieById from '../../utils/getMovieById';\r\n\r\nconst initialToast = {\r\n    show: false,\r\n    type: \"\",\r\n    message: \"\"\r\n}\r\nconst UserDashboard = () => {\r\n    const history = useHistory();\r\n\r\n    // show toast\r\n    const [toast, setToast] = useState(initialToast);\r\n    //\r\n    const [listRankedByUser, setListRankedByUser] = useState([])\r\n    // consumer the movie context\r\n    const { logout } = useContext(UserContext);\r\n    // consumer the movie context\r\n    const {\r\n        ratingsList,\r\n        movieList,\r\n        loadingSearchMovies,\r\n        deleteMovieRated\r\n    } = useContext(MoviesContext);\r\n    // consumer the user context\r\n    const { user } = useContext(UserContext);\r\n\r\n    // handle delete movie ranked by current user\r\n    const deleteRankedMovie = (movieId: any) => {\r\n        try {\r\n            deleteMovieRated(movieId);\r\n            const t = {\r\n                show: true,\r\n                type: \"success\",\r\n                message: \"Rated movie deleted successful\"\r\n            };\r\n            setToast(t)\r\n            setTimeout(() => {\r\n                setToast(initialToast);\r\n            }, 5000)\r\n        } catch (error) {\r\n            const t = {\r\n                show: true,\r\n                type: \"error\",\r\n                message: \"Rated movie not deleted\"\r\n            };\r\n            setToast(t);\r\n            setTimeout(() => {\r\n                setToast(initialToast)\r\n            }, 5000)\r\n        }\r\n    }\r\n    // get the movies ranked by user\r\n    useEffect(() => {\r\n        // filter for movies rated by user\r\n        let listRankedByUser = ratingsList.filter((rated: any) => {\r\n            return rated.emailUser === user.credentials.email\r\n        })\r\n        // add movie title \r\n        console.log(listRankedByUser)\r\n        listRankedByUser.map((m: any) => {\r\n            const res = getMovieById(m.idMovie, movieList);\r\n            console.log(res)\r\n            m.titleMovie = res.title;\r\n        })\r\n        setListRankedByUser(listRankedByUser);\r\n    }, [ratingsList])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                <h4>USER</h4>\r\n                <button\r\n                    className=\"mb-md-0 btn btn-sm btn-secondary\"\r\n                    onClick={() => logout(history)}>\r\n                    Logout\r\n                    </button>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-4\">\r\n                    <img />\r\n                </div>\r\n            </div>\r\n            <h5>My qualifications</h5>\r\n            {!loadingSearchMovies &&\r\n                (\r\n                    <div className=\"row\">\r\n                        <div className=\"table-responsive-sm\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th scope=\"col\">Stars</th>\r\n                                        <th scope=\"col\">Title</th>\r\n                                        <th scope=\"col\">Delete my rating</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        listRankedByUser.map((m: any, index: number) => (\r\n                                            <tr key={m._id} >\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>\r\n                                                    {m.stars}\r\n                                                    <IconStars key={index}\r\n                                                        className=\"rotate-vert-center\"\r\n                                                        width={18} height={18}\r\n                                                        stroke=\"#FF8222\" fill=\"#FF8222\" />\r\n                                                </td>\r\n                                                <td>{m.titleMovie}</td>\r\n                                                <td>\r\n                                                    <button\r\n                                                        onClick={() => deleteRankedMovie(m._id)}\r\n                                                        className=\"btn btn-sm btn-danger btn-danger-shadow\">\r\n                                                        <IconTrash\r\n                                                            stroke=\"#fff\"\r\n                                                            fill=\"#fff\"\r\n                                                        />\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            {toast.show && <Notification type={toast.type} message={toast.message} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDashboard\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport UserContext from '../context/UserContext';\r\nimport NotFoundImage from '../assets/error-404.png';\r\nimport IconStars from '../icons/stars';\r\nimport MoviesContext from '../context/MoviesContext';\r\nimport AdminDashboard from '../components/dashboards/AdminDashboard';\r\nimport UserDashboard from '../components/dashboards/UserDashboard';\r\n\r\nconst Dashboard = () => {\r\n\r\n    // consumer the movie context\r\n    const { user } = useContext(UserContext);\r\n    // consumer the movie context\r\n    const { clearSearchMoviesList } = useContext(MoviesContext);\r\n\r\n    // didMount --> clearSearch\r\n    useEffect(() => {\r\n        return clearSearchMoviesList;\r\n    }, [])\r\n\r\n    return (\r\n        user.credentials ? user.credentials.role === 'ADMIN' ?\r\n            (<AdminDashboard />) : (<UserDashboard />)\r\n            :\r\n            (\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center \">\r\n                        <div className=\"col text-center\">\r\n                            <img src={NotFoundImage} height={300} width={300}></img>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center my-2\">\r\n                        <div className=\"col text-center\">\r\n                            <button className=\"btn btn-primary\">\r\n                                <Link\r\n                                    to=\"/login\"\r\n                                    className=\"link-in-button\">\r\n                                    Login\r\n                            </Link>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport userLogo from '../no-img.png'\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport Home from '../pages/Home';\r\nimport Login from '../pages/login';\r\nimport Signup from '../pages/signup';\r\nimport NotFound from '../pages/notFound';\r\nimport Details from './Details';\r\nimport UserContext from '../context/UserContext';\r\nimport Dashboard from '../pages/dashboard';\r\n\r\nconst NavBar = () => {\r\n\r\n    // consumer the movie context\r\n    const { user } = useContext(UserContext);\r\n    useEffect(() => {\r\n\r\n      \r\n    }, [user])\r\n    return (\r\n        <>\r\n            <Router>\r\n                <div className=\"topnav\">\r\n                    <Link to=\"/\">Home </Link>\r\n\r\n                    {user.authenticated ?\r\n                        (<Link to=\"/dashboard\" className=\"chip icon\">\r\n                            <img src={user.credentials ? user.credentials.avatar : userLogo}\r\n                                className=\"userLogo\"\r\n                            />\r\n                            <small>\r\n                                {user.credentials?.username}\r\n                            </small>\r\n\r\n                        </Link>) :\r\n                        (\r\n                            <>\r\n                                <Link to=\"/login\"> Login </Link>\r\n                                <Link to=\"/signup\"> Signup </Link>\r\n                                <Link to=\"/login\" className=\"chip icon\">\r\n                                    <img src={userLogo}\r\n                                        className=\"userLogo\"\r\n                                    />\r\n                            </Link>\r\n                            </>\r\n                        )}\r\n                </div>\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route path=\"/details/:movieId\" component={Details} />\r\n                    {!user.authenticated ?\r\n                        <>\r\n                            <Route path=\"/login\" component={Login} />\r\n                            <Route path=\"/signup\" component={Signup} />\r\n                            <Redirect to='/login' />\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Route path=\"/dashboard\" component={Dashboard} />\r\n                            \r\n                        </>\r\n                    }\r\n                    < Route component={NotFound} />\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport { MoviesProvider } from './context/MoviesContext';\nimport { UserProvider } from './context/UserContext';\nimport IconStars from './icons/stars';\nimport axios from 'axios';\n\n// axios.defaults.baseURL = 'http://localhost:8080/v1';\naxios.defaults.baseURL = 'https://app-rest-movies-ratings.herokuapp.com/v1';\nfunction App() {\n\n  const [loading, setLoading] = useState({\n    value: true\n  });\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading({ value: false });\n    }, 3000);\n  }, [])\n\n\n  return (\n    <>\n      {loading.value ? (\n        <div className=\"App bg-color-red\">\n          <div className=\"container container-loading\">\n            <div className=\"row justify-content-center align-items-center \">\n              <div className=\"col-12 my-auto col-md-12 text-center\">\n                {/* <img src={MovieGif}></img> */}\n                <p className=\"title-loading-movies text-pop-up-top\">MOVIES</p>\n                <p className=\"title-loading-movies text-pop-up-top\">RATING</p>\n                <div className=\"text-center\">\n                  {[...Array(5)].map((star: any, index: number) => {\n                    const i = 5 - index;\n                    return (\n                      <IconStars key={index} className={\"roll-in-left-\" + i}\n                        width={50} height={50}\n                        stroke=\"#FF8222\" fill=\"#FF8222\" />\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      ) : (\n          <div className=\"App\">\n            <UserProvider>\n              <MoviesProvider>\n                <NavBar />\n              </MoviesProvider>\n            </UserProvider>\n          </div>)}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}